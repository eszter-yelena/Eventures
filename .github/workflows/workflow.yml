name: C/C++ CI

on:
  push:
    branches:
      - 'main'
    
    tags:
      - 'v*'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}\Eventures
  QT_VERSION:   6.5.2
  ARTIFACT:     Eventures-build.zip

jobs:
  build:
    runs-on:  windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          setup-python: false

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url:    http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run:  |
              7z x jom.zip -ojom
              
      - name: Create build directories
        run:  |
          mkdir ${{ runner.temp }}\Eventures
          xcopy /E /I ${{ env.SOURCE_DIR }} ${{ runner.temp }}\Eventures
          mkdir ${{ runner.temp }}\UnitTests
          xcopy /E /I ${{ github.workspace }}\UnitTests ${{ runner.temp }}\UnitTests

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build Debug
        working-directory: ${{ runner.temp }}\Eventures\backend_build
        run:  |
              qmake BackendBuild.pro
              ${{ runner.temp }}\jom\jom -f Makefile.Debug
              cd debug
              windeployqt BackendBuild.exe
              copy C:\Windows\System32\concrt140.dll .
              copy C:\Windows\System32\vccorlib140.dll .
              copy C:\Windows\System32\msvcp140.dll .
              copy C:\Windows\System32\vcruntime140.dll .
              copy ${{ env.SOURCE_DIR }}\include\runtime_dependencies\libcurl.dll .

      - name: Build Release
        working-directory: ${{ runner.temp }}\Eventures\backend_build
        run:  |
              qmake BackendBuild.pro
              ${{ runner.temp }}\jom\jom -f Makefile.Release
              cd release
              windeployqt BackendBuild.exe
              copy C:\Windows\System32\concrt140.dll .
              copy C:\Windows\System32\vccorlib140.dll .
              copy C:\Windows\System32\msvcp140.dll .
              copy C:\Windows\System32\vcruntime140.dll .
              copy ${{ env.SOURCE_DIR }}\include\runtime_dependencies\libcurl.dll .
              
      - name: Zip build
        working-directory: ${{ runner.temp }}
        run:  |
              7z a Eventures-build.zip ${{ runner.temp }}\Eventures\* -r
              
      - name: Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\${{ env.ARTIFACT }}
              
      - name: Setup OpenCppCoverage and add to PATH
        id: setup_opencppcoverage
        
        run: |
          choco install OpenCppCoverage -y
          echo "C:\\Program Files\\OpenCppCoverage" >> $env:PATH
          
      - name: Compile tests and generate code coverage
        working-directory: ${{ runner.temp }}\UnitTests
        shell: cmd
        run: |
          qmake UnitTests.pro
          ${{ runner.temp }}\jom\jom -j2
          cd release
          windeployqt UnitTests.exe
          copy ${{ env.SOURCE_DIR }}\include\runtime_dependencies\libcurl.dll .
          
      - name: Generate Report
        shell: cmd
        run: |
          "C:\Program Files\OpenCppCoverage\OpenCppCoverage.exe" --sources ${{ runner.temp }}\Eventures --excluded_sources ${{ runner.temp }}\Eventures\include --export_type cobertura:coverage.xml -- ${{ runner.temp }}\Eventures\backend_build\debug\BackendBuild.exe
      # - name: Upload Report to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     files: ./coverage.xml
      #     fail_ci_if_error: true
      #     functionalities: fix
